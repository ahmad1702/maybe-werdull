import { KeyboardEventHandler, useEffect, useState } from "react";
import { addFirstIn2DNullArray, addFirstInNullArray, charIsLetter } from "./utils/utils";

type StateType = "neutral" | "incorrect" | "correct";
type LetterBoxProps = {
  key?: string | number;
  char: string;
  state: StateType;
};
const LetterBox = ({ char }: LetterBoxProps) => {
  return (
    <div className="h-16 w-16 bg-slate-800 rounded-2xl mr-2 flex items-center justify-center text-4xl text-white font-bold pb-1">
      {char}
    </div>
  );
};

export type StringOrNull = string | null;
const App = () => {

  // const [currWordArr, setCurrWordArr] = useState<BoxValueType[]>([null, null, null, null, null])
  const [currWordIndex, setCurrWordIndex] = useState<number>(0);
  const [totalArr, setTotalArr] = useState<StringOrNull[][]>([
    [null, null, null, null, null],
    [null, null, null, null, null],
    [null, null, null, null, null],
    [null, null, null, null, null],
    [null, null, null, null, null],
    [null, null, null, null, null],
  ])
  const getData = () => {
    setCurrWordIndex(i => i)
    setTotalArr(arr => arr);
  }
  const updateTotalArr = (char: string) => {
    setTotalArr(currArr => {
      const newArr: StringOrNull[][] = currArr;
      for (let j = 0; j < newArr[currWordIndex].length; j++) {
        if (newArr[currWordIndex][j] == null) {
          newArr[currWordIndex][j] = char;
          break;
        }
      }
      return newArr;
    })
    getData()
  }

  const handleKeyUp = (e: any) => {
    e.preventDefault();
    const inputKey = e.key;
    console.log('key:', inputKey)
    if (inputKey === 'enter') {
      console.log('enterrrrrr')
    } else if (inputKey.length === 1 && typeof e.key === 'string') {
      updateTotalArr(inputKey);
    }
  }

  useEffect(() => console.log('totalArr:', totalArr), [totalArr, setTotalArr])
  useEffect(() => console.log('index:', currWordIndex), [currWordIndex])
  return (
    <div className="h-screen overflow-hidden flex flex-col items-center justify-center">
      {totalArr.map((currArr: StringOrNull[], i: number) => (
        <div key={i} className="flex mb-2">
          {totalArr[i].map((val: StringOrNull, j: number) => (
            // <LetterBox key={j} char={val ? val : ''} state={"neutral"} />
            <div className="h-16 w-16 bg-slate-800 rounded-2xl mr-2 flex items-center justify-center text-4xl text-white font-bold pb-1">
              {val}
            </div>
          ))}
        </div>
      ))}
      <input
        onKeyUp={handleKeyUp}
        type="text"
        name="value"
        id="value"
        className=""
        onBlur={(e) => e.preventDefault()}
      />
      <button
        type='button'
        onClick={(e) => setCurrWordIndex(i => (i + 1) % 6)}
        className="bg-neutral-500 text-white font-bold rounded-xl py-2 px-5"
      >
        water
      </button>
    </div>
  );
};

export default App;
